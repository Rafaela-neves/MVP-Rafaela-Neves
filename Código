%sql
Relatório de MVP: Análise da Relação entre Penetração da Internet e Crescimento Econômico
Pipeline de Dados na Nuvem com Databricks

1. Objetivo do MVP
Problema a resolver:
Analisar a relação entre o crescimento da penetração da internet e indicadores econômicos (PIB, renda per capita) em diferentes países/regiões (2000–2023).

Perguntas de negócio:

Qual o crescimento médio global da penetração da internet no período?

Quais países tiveram o maior crescimento relativo?

Há correlação entre PIB per capita e penetração da internet por região?

Como a pandemia (2019–2021) impactou o crescimento da internet e do PIB?

Quais regiões e grupos de renda têm os maiores crescimentos médios?

Justificativa:
Entender essa relação ajuda governos e empresas a direcionar investimentos em infraestrutura digital.

2. Coleta de Dados (0,5 pt)
Fontes:

Internet Usage: Dados do Banco Mundial (arquivo internet_usage.csv).

GDP Histórico: Dataset do Kaggle (countries_gdp_hist.csv).

Armazenamento:

Os arquivos foram carregados no DBFS do Databricks (caminho: /FileStore/tables/).

Código:
%sql
CREATE OR REPLACE TEMP VIEW q5_region_analysis AS
SELECT
  region_name,
  sub_region_name,
  income_group,
  AVG(yearly_growth) AS avg_internet_growth,
  AVG(gdp_variation) AS avg_gdp_growth,
  COUNT(DISTINCT country_code) AS country_count
FROM joined_silver
WHERE year BETWEEN 2000 AND 2023
GROUP BY region_name, sub_region_name, income_group
ORDER BY region_name, avg_internet_growth DESC;
-- Criar uma tabela permanente com configurações adequadas
CREATE TABLE IF NOT EXISTS countries_gdp_hist 
USING csv
OPTIONS (
  path "/FileStore/tables/countries_gdp_hist.csv",
  header "true",  -- Ativar se a primeira linha contém cabeçalhos
  inferSchema "true",  -- Permitir inferência automática de tipos
  delimiter ","
);
-- Visualizar os dados
SELECT * FROM countries_gdp_hist;
-- Criação da tabela permanente a partir do CSV
CREATE TABLE IF NOT EXISTS internet_usage 
USING csv
OPTIONS (
  path "/FileStore/tables/internet_usage.csv",
  header "false",
  inferSchema "false",
  delimiter ","
);
-- Visualização da tabela bruta
SELECT * FROM internet_usage;
DROP TABLE IF EXISTS internet_usage;
CREATE TABLE IF NOT EXISTS internet_usage 
USING csv
OPTIONS (
  path "/FileStore/tables/internet_usage.csv",
  header "true",         --
  inferSchema "true",
  delimiter ","
);
SELECT * FROM internet_usage LIMIT 10;
DROP TABLE IF EXISTS countries_gdp_hist;
-- Criar a tabela com configurações otimizadas
CREATE TABLE countries_gdp_hist
USING csv
OPTIONS (
  path "/FileStore/tables/countries_gdp_hist.csv",
  header "true",
  inferSchema "true",  
  delimiter ";",      
  multiLine "true"    
);
-- Visualizar os dados corretamente separados
SELECT * FROM countries_gdp_hist;
CREATE OR REPLACE TEMP VIEW internet_usage_long AS
SELECT
  "Country Name" AS country_name,
  "Country Code" AS country_code,
  stack(24,
    2000, "2000",
    2001, "2001",
    2002, "2002",
    2003, "2003",
    2004, "2004",
    2005, "2005",
    2006, "2006",
    2007, "2007",
    2008, "2008",
    2009, "2009",
    2010, "2010",
    2011, "2011",
    2012, "2012",
    2013, "2013",
    2014, "2014",
    2015, "2015",
    2016, "2016",
    2017, "2017",
    2018, "2018",
    2019, "2019",
    2020, "2020",
    2021, "2021",
    2022, "2022",
    2023, "2023"
  ) AS (year, internet_penetration)
  FROM internet_usage
WHERE "Country Code" IS NOT NULL;

CREATE OR REPLACE TEMP VIEW gdp_bronze AS
SELECT
  country_code,
  region_name,
  sub_region_name,
  country_name,
  income_group,
  year,
  total_gdp,
  total_gdp_million,
  gdp_variation
  FROM countries_gdp_hist
WHERE year BETWEEN 2000 AND 2023;
CREATE OR REPLACE TEMP VIEW internet_usage_silver AS
SELECT
  country_name,
  country_code,
  year,
  CAST(internet_penetration AS DOUBLE) AS internet_pct,
  -- Calcular crescimento anual
  CAST(internet_penetration AS DOUBLE) - 
  LAG(CAST(internet_penetration AS DOUBLE), 1) OVER (PARTITION BY country_code ORDER BY year) AS yearly_growth
FROM internet_usage_long
WHERE internet_penetration IS NOT NULL;

CREATE OR REPLACE TEMP VIEW gdp_silver AS
WITH population_est AS (
  -- Estimativa populacional baseada no GDP total (ajuste conforme dados reais)
  SELECT
    country_code,
    year,
    total_gdp_million / 1000 AS gdp_billion, -- Convertendo para bilhões
    total_gdp_million / NULLIF(gdp_variation, 0) * 100 AS estimated_population
  FROM gdp_bronze
)
SELECT
  g.country_code,
  g.country_name,
  g.region_name,
  g.sub_region_name,
  g.income_group,
  g.year,
  g.total_gdp,
  g.gdp_variation,
  p.gdp_billion,
  p.estimated_population,
  CASE WHEN p.estimated_population > 0 
       THEN (g.total_gdp_million * 1000000) / p.estimated_population 
       ELSE NULL END AS gdp_per_capita
FROM gdp_bronze g
LEFT JOIN population_est p ON g.country_code = p.country_code AND g.year = p.year;
CREATE OR REPLACE TEMP VIEW joined_silver AS
SELECT
  i.country_name,
  i.country_code,
  i.year,
  i.internet_pct,
  i.yearly_growth,
  g.region_name,
  g.sub_region_name,
  g.income_group,
  g.gdp_per_capita,
  g.gdp_variation,
  g.gdp_billion
FROM internet_usage_silver i
JOIN gdp_silver g ON i.country_code = g.country_code AND i.year = g.year;
CREATE OR REPLACE TEMP VIEW q1_global_growth AS
SELECT
  AVG(yearly_growth) AS avg_global_growth,
  SUM(yearly_growth) AS total_growth,
  (MAX(internet_pct) - MIN(internet_pct)) / MIN(internet_pct) * 100 AS percentage_increase
FROM internet_usage_silver
WHERE year BETWEEN 2000 AND 2023;
CREATE OR REPLACE TEMP VIEW q2_country_growth AS
WITH country_stats AS (
  SELECT
    i.country_code,
    i.country_name,
    g.region_name,
    g.income_group,
    MIN(i.year) AS first_year,
    MAX(i.year) AS last_year,
    FIRST(i.internet_pct) AS starting_pct,
    LAST(i.internet_pct) AS ending_pct,
    LAST(i.internet_pct) - FIRST(i.internet_pct) AS absolute_growth,
    (LAST(i.internet_pct) - FIRST(i.internet_pct)) / FIRST(i.internet_pct) * 100 AS relative_growth
  FROM internet_usage_silver i
  JOIN (
    SELECT DISTINCT 
      country_code, 
      region_name, 
      income_group 
    FROM gdp_silver
  ) g ON i.country_code = g.country_code
  WHERE i.year BETWEEN 2000 AND 2023
  GROUP BY i.country_code, i.country_name, g.region_name, g.income_group
  HAVING starting_pct > 0 AND ending_pct > 0
)
SELECT * FROM country_stats
ORDER BY relative_growth DESC;
